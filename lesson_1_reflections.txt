How did viewing a diff between two versions of a file help you see the bug that
was introduced?
By using the program diff to compare the differences in the files, I was able to
see the differences in the files by looking at the '+' and '-' characters.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
Having access to the entire history of your file you can see where and when
changes where made and if it did not work you can change or revert back to an
old version.

What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
The cons of manually choosing when to create a document is remembering to do it
and deciding when to commit.
The pros is you have more control when to commit and and you can log what the 
commit is about.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
The ability to save multiple files at once allows the use of logs and the 
ability to comare the files.

How can you use the commands git log and git diff to view the history of files?
You can use the command git log to view the commits made to the files and you 
can use git diff to compare the commits.

How might using version control make you more confident to make changes that
could break something?
I feel confident making changes to code because I can use Git to go back to 
previous versions.

Now that you have your workspace set up, what do ou want to try using Git for?
I want to use for my next project in Intro to Programming Nanodegree...